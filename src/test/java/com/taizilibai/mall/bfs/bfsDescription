### BFS（Breadth First Search）宽（广度）度优先搜索
111.二叉树的最小深度（简单）

752.打开转盘锁（中等）

```java
public int BFS(Node start, Node target) {
        // 存储每一步的节点
        Queue<Node> q;
        Set<Node> visited;
        int step = 0;

        // 初始化
        q.offer(start);
        visited.add(start);

        while(q not empty) {
            for(int i=0; i<q.size(); i++) {
                Node poll = q.poll();
                // 判断结束条件
                if(target == poll) {
                    return step;
                }
                // 相邻节点添加队列
                for(Node x : poll.adj()) {
                    if(!visited.contains(x)){
                        q.offer(x);
                        visited.add(x);
                    }
                }
            }
            step++;
        }
}
```


